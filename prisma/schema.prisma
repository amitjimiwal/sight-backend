// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int          @id @default(autoincrement())
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @default(now())
  email           String       @unique
  name            String
  limit           Int          @default(1)
  password        String
  isEmailVerified Boolean      @default(false)
  Otp             Otp?
  Subscription    Subscription?
  Result          Result[]
  ForgotPassword  ForgotPassword?
}

model Otp {
  id     Int  @id @default(autoincrement())
  otp    Int  @unique
  user   User @relation(fields: [userID], references: [id])
  userID Int  @unique
  otpExpiresAt    DateTime     
}

model Subscription {
  id                     Int              @id @default(autoincrement())
  stripeCustomerId       String?          @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?          @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?          @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime?        @map(name: "stripe_current_period_end")
  user                   User             @relation(fields: [userId], references: [id])
  userId                 Int              @unique
}

model Result {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userID], references: [id])
  userID    Int      
  score     Int // Typing score achieved by the user
  accuracy  Float // Typing accuracy (percentage)
  duration  Int // Duration of the typing test (in seconds)
  createdAt DateTime @default(now())
  // Define a relation to the User model
}

model ForgotPassword {
  id        Int      @id @default(autoincrement())
  email     String
  user      User     @relation(fields: [userID], references: [id])
  userID    Int      @unique   
  token     String
  expiresAt DateTime
}

